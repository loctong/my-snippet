{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart.service.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/product-alert/product-alert.component.css","webpack:///./src/app/product-alert/product-alert.component.html","webpack:///./src/app/product-alert/product-alert.component.ts","webpack:///./src/app/product-details/product-details.component.css","webpack:///./src/app/product-details/product-details.component.html","webpack:///./src/app/product-details/product-details.component.ts","webpack:///./src/app/product-list/product-list.component.css","webpack:///./src/app/product-list/product-list.component.html","webpack:///./src/app/product-list/product-list.component.ts","webpack:///./src/app/products.ts","webpack:///./src/app/shipping/shipping.component.css","webpack:///./src/app/shipping/shipping.component.html","webpack:///./src/app/shipping/shipping.component.ts","webpack:///./src/app/top-bar/top-bar.component.css","webpack:///./src/app/top-bar/top-bar.component.html","webpack:///./src/app/top-bar/top-bar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-top-bar></app-top-bar>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport {RouterModule} from \"@angular/router\";\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductAlertComponent } from './product-alert/product-alert.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { CartComponent } from './cart/cart.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { ShippingComponent } from './shipping/shipping.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    ProductListComponent,\n    ProductAlertComponent,\n    ProductDetailsComponent,\n    CartComponent,\n    ShippingComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { path: '', component: ProductListComponent},\n      { path: 'product/:id', component: ProductDetailsComponent},\n      { path: 'cart', component: CartComponent},\n      { path: 'shipping', component: ShippingComponent}\n      ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n    items = [];\n\n    constructor(\n      private http: HttpClient\n    ){}\n\n    addToCart(product) {\n      this.items.push(product);\n    }\n\n    getItems() {\n      return this.items;\n    }\n\n    clearCart() {\n      this.items = [];\n      return this.items;\n    }\n\n    getShippingPrices(){\n       return this.http.get('/assets/shipping.json');\n    }\n}\n","module.exports = \".cart-item{\\n  background: #EEE ;\\n  padding: 10px;\\n  margin-bottom: 5px;\\n  border-radius: 5px;\\n}\\n\"","module.exports = \"<h3>Cart</h3>\\n\\n<p>\\n  <a routerLink=\\\"/shipping\\\">Shipping Prices</a>\\n</p>\\n<div class=\\\"cart-item\\\" *ngFor=\\\"let item of items\\\">\\n  <span>{{ item.name }}</span>\\n  <span>{{ item.price | currency }}</span>\\n</div>\\n\\n<form [formGroup]=\\\"checkoutForm\\\" (ngSubmit)=\\\"onSubmit(checkoutForm.value)\\\">\\n  <div>\\n    <label for=\\\"name\\\">\\n      Name\\n    </label>\\n    <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\n  </div>\\n\\n  <div>\\n    <label for=\\\"address\\\">\\n      Address\\n    </label>\\n    <input id=\\\"address\\\" type=\\\"text\\\" formControlName=\\\"address\\\">\\n  </div>\\n  <button class=\\\"button\\\" type=\\\"submit\\\">Purchase</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CartService} from \"../cart.service\";\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  items;\n  checkoutForm;\n\n  constructor(private cartService: CartService,\n              private formBuilder: FormBuilder,) {\n\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n\n  }\n\n  ngOnInit() {\n    this.items = this.cartService.getItems();\n  }\n\n  onSubmit(customerData) {\n    // Process checkout data here\n    console.warn('Your order has been submitted', customerData);\n\n    this.items = this.cartService.clearCart();\n    this.checkoutForm.reset();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  <button *ngIf=\\\"product.price > 700\\\" (click)=\\\"notify.emit()\\\">\\n    Notify\\n  </button>\\n</p>\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-product-alert',\n  templateUrl: './product-alert.component.html',\n  styleUrls: ['./product-alert.component.css']\n})\nexport class ProductAlertComponent implements OnInit {\n\n  @Input() product;\n  @Output() notify = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Product Details</h2>\\n<div *ngIf='product'>\\n  <h3>{{product.name}}</h3>\\n  <h4>{{product.price | currency}}</h4>\\n  <p>{{product.description}}</p>\\n\\n  <button (click)=\\\"addToCart(product)\\\">Buy</button>\\n</div>\\n\"","import { Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router'\nimport { products } from '../products';\nimport {CartService} from \"../cart.service\";\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  product: any;\n  constructor(\n    private route: ActivatedRoute,\n    private cartService: CartService\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params =>{\n      this.product = products[+params.get('id')];\n\n    })\n  }\n\n  addToCart(product) {\n    window.alert('Your product has been added to the cart!');\n    this.cartService.addToCart(product);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>\\n  Products\\n</h2>\\n\\n<div *ngFor=\\\"let product of products; index as productId\\\">\\n  <h3>\\n    <a [title]=\\\"product.name + ' details'\\\" [routerLink] = \\\"['/product', productId]\\\">{{ product.name }}</a>\\n  </h3>\\n  <p *ngIf=\\\"product.description\\\">\\n    Description: {{product.description}}\\n  </p>\\n<p>\\n  <button (click)=\\\"share()\\\">\\n  Share\\n</button>\\n</p>\\n\\n  <app-product-alert\\n  [product] = product\\n  (notify) = \\\"onNotify()\\\">\\n\\n  </app-product-alert>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { products } from '../products';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  products = products;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  share(){\n    alert(\"ProductListComponent.share()\");\n  }\n\n  onNotify(){\n    alert(\"ProductListComponent.onNotify()\");\n  }\n\n}\n","export const products = [\n  {\n    name: 'Phone XL',\n    price: 799,\n    description: 'A large phone with one of the best screens'\n  },\n  {\n    name: 'Phone Mini',\n    price: 699,\n    description: 'A great phone with one of the best cameras'\n  },\n  {\n    name: 'Phone Standard',\n    price: 299,\n    description: ''\n  }\n];\n\n","module.exports = \".shipping-item{\\n  min-width: 400px;\\n  max-width: 450px;\\n  background: #EEE ;\\n  padding: 10px;\\n  margin-bottom: 5px;\\n  border-radius: 5px;\\n  display: flex;\\n  justify-content: space-between;\\n\\n}\\n\"","module.exports = \"<h3>Shipping Prices</h3>\\n\\n<div class=\\\"shipping-item\\\" *ngFor=\\\"let shipping of shippingCosts | async\\\">\\n  <span>{{ shipping.type }}</span>\\n  <span>{{ shipping.price | currency }}</span>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CartService} from \"../cart.service\";\n\n@Component({\n  selector: 'app-shipping',\n  templateUrl: './shipping.component.html',\n  styleUrls: ['./shipping.component.css']\n})\nexport class ShippingComponent implements OnInit {\n\n  shippingCosts;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit() {\n    this.shippingCosts = this.cartService.getShippingPrices();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"['/']\\\">\\n  <h1>My Store</h1>\\n</a>\\n\\n<a [routerLink]=\\\"['/cart']\\\" class=\\\"button fancy-button\\\">\\n  <i class=\\\"material-icons\\\">shopping_cart</i> Checkout\\n</a>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}